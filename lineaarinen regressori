#Tosi yksinkertainen lineaarinen regressio, 
#jossa sovitus tehdään osasta annettua dataa ja verrataan sitä
#datan loppuosaan. Myös piste-ennuste ja visualisointi.

#Nämä ei kuulu R:n peruskokoonpanoon
#caTools vaatii R 3.6.0 tai uudemman
#install.packages('caTools')
#install.packages('ggplot2')

#luetaan datasetti tiedostosta
#xvar on riippumaton ja yvar riippuva muuttuja
datasetti = read.csv("data.csv")

#datasetin splittaus treeniosioon ja testausosioon
#yleensä 80/20 on hyvä suhde
library(caTools)
set.seed(42)
splitti = sample.split(datasetti$xvar, SplitRatio = 0.8) #muuta tarvittaessa!
treeniosa = subset(datasetti, splitti == TRUE)
testiosa = subset(datasetti, splitti == FALSE)

#tosi yksinkertainen lineaarinen regressori
regressori = lm(formula = yvar ~ xvar, data = treeniosa)
summary(regressori)

#piste-ennuste
pe = 6.5 #muuta tarvittavaksi
y_ennuste = predict(regressori, data.frame(xvar = pe))
y_ennuste

#visualisointi ggplot2:lla
library(ggplot2)

#katsotaan miltä lopputulos näyttää ja kuinka ennusteet sopivat
#xgrid tekee sileämmän käyrän (tässä nyt ei ehkä kovinkaan tarpeellinen...)
xgrid = seq(min(datasetti$xvar), max(datasetti$xvar), 0.1)
ggplot() +
  geom_point(aes(x = treeniosa$xvar, y = treeniosa$yvar), colour = 'blue') +
  geom_point(aes(x = testiosa$xvar, y = testiosa$yvar), colour = 'green') +
  geom_point(aes(x = pe, y = y_ennuste), colour = 'black', shape = 'x', size = 3) +
  geom_line(aes(x = xgrid, y = predict(regressori, newdata = data.frame(xgrid))), colour = 'red') +
  ggtitle('lineaarinen regressio') + 
  xlab('x var') +
  ylab('y var')
